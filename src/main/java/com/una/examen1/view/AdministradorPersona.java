/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.una.examen1.view;

import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import com.una.examen1.controller.ControladorCinema;
import com.una.examen1.model.Actor;
import com.una.examen1.model.Director;
import com.una.examen1.model.Persona;
import com.una.examen1.view.tablemodel.PersonaTableModel;

public class AdministradorPersona extends javax.swing.JFrame {

    private boolean esActor;
    private MenuPrincipal padre;

    /**
     * Creates new form AdministradorPersona
     */
    public AdministradorPersona(MenuPrincipal padre, boolean esActor) {
        initComponents();
        getContentPane().setBackground(java.awt.Color.decode("#FFFFCC"));
        this.esActor = esActor;
        this.padre = padre;
        if (esActor) {
            setTitle("Administrador Actores");
        } else {
            setTitle("Administrador Directores");
        }

        tablePersonas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                txtID.setText(tablePersonas.getValueAt(tablePersonas.getSelectedRow(), 0).toString());
                buscarPersona();
            }
        });
        actualizarLista();
    }

    private void buscarPersona() {
        try {
            Integer id = Integer.parseInt(txtID.getText());
            Persona p;
            if (esActor) {
                p = ControladorCinema.getInstancia().recuperarActor(id);
            } else {
                p = ControladorCinema.getInstancia().recuperarDirector(id);
            }
            if (p != null) {
                txtID.setText(Integer.valueOf(p.getID()).toString());
                txtNombre.setText(p.getNombre());
                txtPremios.setText(Integer.valueOf(p.getCantidad()).toString());
            } else {
                JOptionPane.showMessageDialog(this, "Persona no encontrada", "no se encontro la persona",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error de formato", "el ID debe ser un numero entero",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void actualizarLista() {
        PersonaTableModel modelo;
        if (esActor) {
            modelo = new PersonaTableModel(ControladorCinema.getInstancia().recuperarActores());
        } else {
            modelo = new PersonaTableModel(ControladorCinema.getInstancia().recuperarDirectores());
        }
        tablePersonas.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPremios = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePersonas = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Regresar");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jLabel1.setText("ID:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Cantidad de Premios: ");

        tablePersonas.setModel(new PersonaTableModel());
        tablePersonas.setToolTipText("");
        jScrollPane2.setViewportView(tablePersonas);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup().addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombre)
                                        .addComponent(txtPremios, javax.swing.GroupLayout.DEFAULT_SIZE, 208,
                                                Short.MAX_VALUE)
                                        .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout
                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup().addGap(6, 6, 6).addComponent(btnAgregar)
                                        .addGap(18, 18, 18).addComponent(btnBuscar).addGap(18, 18, 18)
                                        .addComponent(btnListar).addGap(18, 18, 18).addComponent(btnActualizar)
                                        .addGap(18, 18, 18).addComponent(btnRegresar)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout
                                        .createSequentialGroup().addComponent(jScrollPane2,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                                        .addContainerGap()))));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPremios, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnRegresar, javax.swing.GroupLayout.Alignment.TRAILING,
                                        javax.swing.GroupLayout.PREFERRED_SIZE, 23,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnAgregar).addComponent(btnBuscar).addComponent(btnListar)
                                        .addComponent(btnActualizar)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAgregarActionPerformed
        try {
            Integer id = Integer.parseInt(txtID.getText());
            String nombre = txtNombre.getText();
            Integer cantidad = Integer.parseInt(txtPremios.getText());
            boolean exitoso;
            if (esActor) {
                Actor nuevo = new Actor(id, nombre, cantidad);
                exitoso = ControladorCinema.getInstancia().agregarActor(nuevo);
            } else {
                Director nuevo = new Director(id, nombre, cantidad);
                exitoso = ControladorCinema.getInstancia().agregarDirector(nuevo);
            }
            if (exitoso) {
                actualizarLista();
            } else {
                JOptionPane.showMessageDialog(this, "Campo existente", "La persona ya esta registrada",
                        JOptionPane.WARNING_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error de formato", "El id y los premios deben de ser numeros enteros",
                    JOptionPane.ERROR_MESSAGE);
        }

    }// GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBuscarActionPerformed
        buscarPersona();
    }// GEN-LAST:event_btnBuscarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnListarActionPerformed
        try {
            PersonaTableModel modelo;
            Integer id = Integer.parseInt(txtID.getText());
            if (esActor) {
                modelo = new PersonaTableModel(ControladorCinema.getInstancia().buscarActores(id));
            } else {
                modelo = new PersonaTableModel(ControladorCinema.getInstancia().buscarDirectores(id));
            }
            tablePersonas.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error de formato", "el ID debe ser un numero entero",
                    JOptionPane.ERROR_MESSAGE);
        }

    }// GEN-LAST:event_btnListarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnActualizarActionPerformed
        try {
            Integer id = Integer.parseInt(txtID.getText());
            String nombre = txtNombre.getText();
            Integer cantidad = Integer.parseInt(txtPremios.getText());
            boolean exitoso;
            if (esActor) {
                Actor nuevo = new Actor(id, nombre, cantidad);
                exitoso = ControladorCinema.getInstancia().actualizarActor(nuevo);
            } else {
                Director nuevo = new Director(id, nombre, cantidad);
                exitoso = ControladorCinema.getInstancia().actualizarDirector(nuevo);
            }
            if (exitoso) {
                actualizarLista();
            } else {
                JOptionPane.showMessageDialog(this, "Campo no existente", "La persona no esta registrada",
                        JOptionPane.WARNING_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error de formato", "El id y los premios deben de ser numeros enteros",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnActualizarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRegresarActionPerformed
        padre.setVisible(true);
        dispose();
    }// GEN-LAST:event_btnRegresarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tablePersonas;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPremios;
    // End of variables declaration//GEN-END:variables
}
